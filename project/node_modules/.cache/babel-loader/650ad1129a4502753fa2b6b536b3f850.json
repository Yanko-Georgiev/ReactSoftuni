{"ast":null,"code":"import * as request from \"./requester\";\nconst baseUrl = 'http://localhost:3030/data/comments';\nexport const create = (movieId, comment) => request.post(baseUrl, {\n  movieId,\n  text: comment\n});\nexport const getByMovieId = movieId => {\n  const relations = encodeURIComponent(`user=_ownerId:users`);\n  const search = encodeURIComponent(`movieId=\"${movieId}\"`);\n  return request.get(`${baseUrl}?where=${search}&load=${relations}`);\n};","map":{"version":3,"names":["request","baseUrl","create","movieId","comment","post","text","getByMovieId","relations","encodeURIComponent","search","get"],"sources":["/Users/yankogeorgiev/GitHub/ReactSoftuni/project/src/services/commentService.js"],"sourcesContent":["import * as request from \"./requester\";\n\nconst baseUrl = 'http://localhost:3030/data/comments';\n\nexport const create = (movieId, comment) =>\n    request.post(baseUrl, { movieId, text: comment });\n\nexport const getByMovieId = (movieId) => {\n    const relations = encodeURIComponent(`user=_ownerId:users`);\n    const search = encodeURIComponent(`movieId=\"${movieId}\"`);\n\n    return request.get(`${baseUrl}?where=${search}&load=${relations}`);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;AAEA,MAAMC,OAAO,GAAG,qCAAhB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,OAAD,EAAUC,OAAV,KAClBJ,OAAO,CAACK,IAAR,CAAaJ,OAAb,EAAsB;EAAEE,OAAF;EAAWG,IAAI,EAAEF;AAAjB,CAAtB,CADG;AAGP,OAAO,MAAMG,YAAY,GAAIJ,OAAD,IAAa;EACrC,MAAMK,SAAS,GAAGC,kBAAkB,CAAE,qBAAF,CAApC;EACA,MAAMC,MAAM,GAAGD,kBAAkB,CAAE,YAAWN,OAAQ,GAArB,CAAjC;EAEA,OAAOH,OAAO,CAACW,GAAR,CAAa,GAAEV,OAAQ,UAASS,MAAO,SAAQF,SAAU,EAAzD,CAAP;AACH,CALM"},"metadata":{},"sourceType":"module"}