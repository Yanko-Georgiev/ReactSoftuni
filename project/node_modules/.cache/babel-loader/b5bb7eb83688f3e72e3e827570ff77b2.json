{"ast":null,"code":"import * as request from \"./requester\";\nconst baseUrl = 'http://localhost:3030/users';\nexport const login = (email, password) => request.post(`${baseUrl}/login`, {\n  email,\n  password\n});\nexport const logout = async accessToken => {\n  try {\n    const response = await fetch(`${baseUrl}/logout`, {\n      headers: {\n        'X-Authorization': accessToken\n      }\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const register = (email, password) => request.post(`${baseUrl}/register`, {\n  email,\n  password\n});","map":{"version":3,"names":["request","baseUrl","login","email","password","post","logout","accessToken","response","fetch","headers","error","console","log","register"],"sources":["/Users/yankogeorgiev/GitHub/ReactSoftuni/project/src/services/authService.js"],"sourcesContent":["import * as request from \"./requester\";\n\nconst baseUrl = 'http://localhost:3030/users';\n\nexport const login = (email, password) => \n    request.post(`${baseUrl}/login`, { email, password });\n\n\nexport const logout = async (accessToken) => {\n    try {\n        const response = await fetch(`${baseUrl}/logout`, {\n            headers: {\n                'X-Authorization': accessToken\n            }\n        });\n\n        return response;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const register = (email, password) =>\n    request.post(`${baseUrl}/register`, {email, password});\n"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;AAEA,MAAMC,OAAO,GAAG,6BAAhB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KACjBJ,OAAO,CAACK,IAAR,CAAc,GAAEJ,OAAQ,QAAxB,EAAiC;EAAEE,KAAF;EAASC;AAAT,CAAjC,CADG;AAIP,OAAO,MAAME,MAAM,GAAG,MAAOC,WAAP,IAAuB;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,OAAQ,SAAZ,EAAsB;MAC9CS,OAAO,EAAE;QACL,mBAAmBH;MADd;IADqC,CAAtB,CAA5B;IAMA,OAAOC,QAAP;EACH,CARD,CAQE,OAAOG,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAZM;AAcP,OAAO,MAAMG,QAAQ,GAAG,CAACX,KAAD,EAAQC,QAAR,KACpBJ,OAAO,CAACK,IAAR,CAAc,GAAEJ,OAAQ,WAAxB,EAAoC;EAACE,KAAD;EAAQC;AAAR,CAApC,CADG"},"metadata":{},"sourceType":"module"}