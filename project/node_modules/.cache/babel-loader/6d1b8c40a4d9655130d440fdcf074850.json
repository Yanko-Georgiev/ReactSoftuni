{"ast":null,"code":"var _jsxFileName = \"/Users/yankogeorgiev/GitHub/ReactSoftuni/project/src/contexts/NewsContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport * as newsService from '../services/newsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewsContext = /*#__PURE__*/createContext();\n\nconst newsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_NEWS':\n      return action.payload.map(x => ({ ...x\n      }));\n\n    case 'ADD_NEW':\n      return [...state, action.payload];\n\n    case 'FETCH_NEW_DETAILS':\n    case 'EDIT_NEW':\n      return state.map(x => x._id === action.newsId ? action.payload : x);\n\n    case 'ADD_COMMENT':\n      return state.map(x => x._id === action.newsId ? { ...x\n      } : x);\n\n    case 'REMOVE_NEW':\n      return state.filter(x => x._id !== action.newsId);\n\n    default:\n      return state;\n  }\n};\n\nexport const NewsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [news, dispatch] = useReducer(newsReducer, []);\n  useEffect(() => {\n    newsService.getAll().then(result => {\n      const action = {\n        type: 'ADD_NEWS',\n        payload: result\n      };\n      dispatch(action);\n    });\n  }, []);\n\n  const selectNews = newsId => {\n    return news.find(x => x._id === newsId) || {};\n  };\n\n  const fetchNewsDetails = (newsId, newsDetails) => {\n    dispatch({\n      type: 'FETCH_NEW_DETAILS',\n      payload: newsDetails,\n      newsId\n    });\n  };\n\n  const addComment = (newsId, comment) => {\n    dispatch({\n      type: 'ADD_COMMENT',\n      payload: comment,\n      newsId\n    });\n  };\n\n  const newsAdd = newsData => {\n    dispatch({\n      type: 'ADD_NEW',\n      payload: newsData\n    });\n    navigate('/catalog');\n  };\n\n  const newsEdit = (newsId, newsData) => {\n    dispatch({\n      type: 'EDIT_NEW',\n      payload: newsData,\n      newsId\n    });\n  };\n\n  const newsRemove = newsId => {\n    dispatch({\n      type: 'REMOVE_NEW',\n      newsId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(NewsContext.Provider, {\n    value: {\n      news,\n      newsAdd,\n      newsEdit,\n      addComment,\n      fetchNewsDetails,\n      selectNews,\n      newsRemove\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewsProvider, \"9FoRQpuBMOK7KUKV+lI0Wr+GN3g=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","useNavigate","newsService","NewsContext","newsReducer","state","action","type","payload","map","x","_id","newsId","filter","NewsProvider","children","navigate","news","dispatch","getAll","then","result","selectNews","find","fetchNewsDetails","newsDetails","addComment","comment","newsAdd","newsData","newsEdit","newsRemove"],"sources":["/Users/yankogeorgiev/GitHub/ReactSoftuni/project/src/contexts/NewsContext.js"],"sourcesContent":["import { createContext, useReducer, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nimport * as newsService from '../services/newsService';\n\nexport const NewsContext = createContext();\n\nconst newsReducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_NEWS':\n            return action.payload.map(x => ({ ...x}));\n        case 'ADD_NEW':\n            return [...state, action.payload];\n        case 'FETCH_NEW_DETAILS':\n        case 'EDIT_NEW':\n            return state.map(x => x._id === action.newsId ? action.payload : x);\n        case 'ADD_COMMENT':\n            return state.map(x => x._id === action.newsId ? { ...x} : x);\n        case 'REMOVE_NEW':\n            return state.filter(x => x._id !== action.newsId);\n        default:\n            return state;\n    }\n};\n\nexport const NewsProvider = ({\n    children,\n}) => {\n    const navigate = useNavigate();\n    const [news, dispatch] = useReducer(newsReducer, []);\n\n    useEffect(() => {\n        newsService.getAll()\n            .then(result => {\n                const action = {\n                    type: 'ADD_NEWS',\n                    payload: result\n                };\n\n                dispatch(action);\n            });\n    }, []);\n\n    const selectNews = (newsId) => {\n        return news.find(x => x._id === newsId) || {};\n    };\n\n    const fetchNewsDetails = (newsId, newsDetails) => {\n        dispatch({\n            type: 'FETCH_NEW_DETAILS',\n            payload: newsDetails,\n            newsId,\n        })\n    };\n    const addComment = (newsId, comment) => {\n        dispatch({\n            type: 'ADD_COMMENT',\n            payload: comment,\n            newsId\n        });\n    }\n    const newsAdd = (newsData) => {\n        dispatch({\n            type: 'ADD_NEW',\n            payload: newsData,\n        })\n\n        navigate('/catalog');\n    };\n\n    const newsEdit = (newsId, newsData) => {\n        dispatch({\n            type: 'EDIT_NEW',\n            payload: newsData,\n            newsId,\n        });\n    };\n\n    const newsRemove = (newsId) => {\n        dispatch({\n            type: 'REMOVE_NEW',\n            newsId\n        })\n    }\n    return (\n        <NewsContext.Provider value={{\n            news,\n            newsAdd,\n            newsEdit,\n            addComment,\n            fetchNewsDetails,\n            selectNews,\n            newsRemove\n        }}>\n            {children}\n        </NewsContext.Provider>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}